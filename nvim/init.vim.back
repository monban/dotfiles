let g:configpath = stdpath('config')
execute 'source ' . g:configpath . '/editing.vim'
execute 'source ' . g:configpath . '/bindings.vim'
execute 'source ' . g:configpath . '/appearence.vim'
execute 'source ' . g:configpath . '/goyo.vim'
execute 'source ' . g:configpath . '/lsp.vim'
execute 'source ' . g:configpath . '/snippets.vim'

" Reload init.vim after save
autocmd! BufWritePost init.vim source $MYVIMRC

function! FzfOmniSharp()
  let l:completions=OmniSharp#actions#complete#Get()
  call fzf#vim#complete(l:completions)
endfunction

let g:ale_linters = {'cs': ['OmniSharp']}

nnoremap <leader>ev :e $MYVIMRC<cr>
nnoremap <C-p> :Files<cr>
inoremap kj <esc>
inoremap <C-Space> <C-x><C-o>
set pumheight=5

function! DisableExtras()
  call nvim_win_set_option(g:float_preview#win, 'number', v:false)
  call nvim_win_set_option(g:float_preview#win, 'relativenumber', v:false)
  call nvim_win_set_option(g:float_preview#win, 'cursorline', v:false)
  call nvim_win_set_option(g:float_preview#win, 'wrap', v:true)
  call nvim_win_set_option(g:float_preview#win, 'linebreak', v:true)
endfunction

autocmd User FloatPreviewWinOpen call DisableExtras()

autocmd FileType gdscript3 set noexpandtab
au User Ncm2PopupOpen set completeopt=noinsert,menuone,noselect
au User Ncm2PopupClose set completeopt=menuone

let g:OmniSharp_want_snippet=1
inoremap <silent> <expr> <CR> ncm2_ultisnips#expand_or("\<CR>", 'n')
" c-j c-k for moving in snippet
let g:UltiSnipsExpandTrigger = "<Plug>(ultisnips_expand)"
let g:UltiSnipsJumpForwardTrigger = "<c-j>"
let g:UltiSnipsJumpBackwardTrigger = "<c-k>"
let g:UltiSnipsRemoveSelectModeMappings = 0

set list
set listchars=tab:->,nbsp:_,trail:.

lua << EOF
  local nvim_lsp = require('lspconfig')
  ncm2 = require('ncm2')
  nvim_lsp.gdscript.setup{on_init = ncm2.register_lsp_source}
EOF
"autocmd BufEnter * call ncm2#enable_for_buffer()
autocmd BufEnter * lua require'completion'.on_attach()
set signcolumn=number
